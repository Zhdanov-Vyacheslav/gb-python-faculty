# Создать вручную список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
#
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk>
#   коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули,
#   если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка
#   после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав
#   минимум кода?

input_list = [1236.6, 1881.37, 268.39, 3143.51, 2352.3, 489.38, 2510.41, 1712.68,
              2360.1, 1588.8, 2956.32, 4066.52, 4025, 3968.28, 3056.04, 2233.61,
              2412.19, 4134.27, 1375.9, 1655.98]


def main(price_list):
    result = ''
    for element in price_list:
        if str(element).find('.') != -1:
            ruble, penny = str(element).split('.')
            result += f'{int(ruble)} руб {int(penny):02d} коп,'
        else:
            result += f'{int(element)} руб 00 коп,'
    return result[:-1]


# A
print(f'Вывод цен не меняя список'
      f'\n {main(input_list)}')
# B
print(f'ID листа перед сортировкой = {id(input_list)}'
      f'\nВывод цен, отсортированные по возрастанию'
      f'\n {main(sorted(input_list))}')
print(f'ID листа после сортировки = {id(input_list)}'
      f'\nВывод списка вводных даных для докозательства'
      f'\n {input_list}')
# C
new_list = list(reversed(list(sorted(input_list))))
print(f'ID нового листа = {id(new_list)}'
      f'\nВывод цен по убыванию'
      f'\n {main(new_list)}')
# D
print(f'Вывод цены пяти самых дорогих товаров по возростанию'
      f'\n {main(list(reversed(new_list[:6])))}')
